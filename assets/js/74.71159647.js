(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{406:function(n,e,s){"use strict";s.r(e);var t=s(8),o=Object(t.a)({},(function(){var n=this._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("project\n├── package.json npm包配置\n├── bulid 打包用的资源和脚本\n    ├── icons 软件图标（打包用到）\n    ├── extraResources 额外资源目录\n├── electron 主进程服务\n    ├── addon 插件目录\n        ├── example demo插件（代码示例）\n    ├── config 配置文件\n        ├── config.default.js 默认配置，都会加载\n        ├── config.local.js dev环境加载\n        ├── config.prod.js 生产环境加载\n        ├── encrypt.js 加密配置文件\n    ├── controller 控制器\n    ├── service 业务层\n    ├── preload 预加载，在程序启动时加载，如托盘、自动升级等功能要提前加载代码\n    ├── library 一些封装库\n├── frontend 前端目录（demo是用vue编写的）    \n├── out 打包后生成的可执行文件\n    ├── latest.yml 自动升级文件\n    ├── xxx.exe window应用安装包\n    ├── xxx.exe.blockmap window应用增量升级包（未测试过）\n    ├── xxx.dmg mac应用安装包\n    ├── xxx.deb linux应用安装包后缀有多种    \n├── run 一些运行缓存\n├── logs 日志 \n├── main.js 入口文件 \n├── public 资源目录\n    ├── dist 前端资源会移动到这里，生产环境加载\n    ├── electron 业务js加密后的文件\n    ├── html 一些模板\n    ├── images 一些图片\n├── data 内置数据库文件\n    ├── system.json 框架使用的数据库\n    ├── demo.json 示例json数据库\n    ├── sqlite-demo.db 示例sqlite数据库\n")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);