(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{518:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("ee-go：v1.1.0")])]),t._v(" "),s("h3",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[t._v("辅助函数模块")]),t._v(" "),s("h3",{attrs:{id:"使用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[t._v("#")]),t._v(" 使用方法")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/wallace5303/ee-go/ehelper"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"api列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api列表"}},[t._v("#")]),t._v(" API列表")]),t._v(" "),s("p",[t._v("仅做简单介绍。按照go标准，常量/函数/方法等说明信息，都在源码中。")]),t._v(" "),s("h3",{attrs:{id:"func-fileisexist-path-string-bool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#func-fileisexist-path-string-bool"}},[t._v("#")]),t._v(" func FileIsExist(path string) bool")]),t._v(" "),s("p",[t._v("文件是否存在")]),t._v(" "),s("h3",{attrs:{id:"func-isdir-path-string-bool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#func-isdir-path-string-bool"}},[t._v("#")]),t._v(" func IsDir(path string) bool")]),t._v(" "),s("p",[t._v("是否为目录")]),t._v(" "),s("h3",{attrs:{id:"func-mapserge-src-tgt-map-string-any-itgt-map-any-any"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#func-mapserge-src-tgt-map-string-any-itgt-map-any-any"}},[t._v("#")]),t._v(" func Mapserge(src, tgt map[string]any, itgt map[any]any)")]),t._v(" "),s("p",[t._v("合并map")]),t._v(" "),s("h3",{attrs:{id:"func-getjson-resultjson"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#func-getjson-resultjson"}},[t._v("#")]),t._v(" func GetJson() *ResultJson")]),t._v(" "),s("p",[t._v("获取返回值的json结构")]),t._v(" "),s("h3",{attrs:{id:"func-getrandomstring-length-int-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#func-getrandomstring-length-int-string"}},[t._v("#")]),t._v(" func GetRandomString(length int) string")]),t._v(" "),s("p",[t._v("获取一个随机字符串")]),t._v(" "),s("h3",{attrs:{id:"func-contains-str-string-strs-string-bool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#func-contains-str-string-strs-string-bool"}},[t._v("#")]),t._v(" func Contains(str string, strs []string) bool")]),t._v(" "),s("p",[t._v("子字符串是否在字符串中")]),t._v(" "),s("h3",{attrs:{id:"func-slicescontains-slice-string-str-string-bool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#func-slicescontains-slice-string-str-string-bool"}},[t._v("#")]),t._v(" func SlicesContains(slice []string, str string) bool")]),t._v(" "),s("p",[t._v("字符串是否在切片中")]),t._v(" "),s("h3",{attrs:{id:"func-removeduplicatedelem-slice-string-ret-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#func-removeduplicatedelem-slice-string-ret-string"}},[t._v("#")]),t._v(" func RemoveDuplicatedElem(slice []string) (ret []string)")]),t._v(" "),s("p",[t._v("去重切片")]),t._v(" "),s("h3",{attrs:{id:"func-randomsleep-minmills-maxmills-int"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#func-randomsleep-minmills-maxmills-int"}},[t._v("#")]),t._v(" func RandomSleep(minMills, maxMills int)")]),t._v(" "),s("p",[t._v("随机睡眠")])])}),[],!1,null,null,null);s.default=r.exports}}]);