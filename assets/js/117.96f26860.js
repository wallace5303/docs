(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{442:function(t,s,e){"use strict";e.r(s);var a=e(7),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"response"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response"}},[t._v("#")]),t._v(" response")]),t._v(" "),s("p",[t._v("如果你开启了内置http server服务，才能使用，该属性继承koa的response。")]),t._v(" "),s("p",[t._v("使用方法：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response\n")])])]),s("h3",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),s("h3",{attrs:{id:"response-header"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-header"}},[t._v("#")]),t._v(" response.header")]),t._v(" "),s("p",[t._v("响应头对象。")]),t._v(" "),s("h3",{attrs:{id:"response-headers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-headers"}},[t._v("#")]),t._v(" response.headers")]),t._v(" "),s("p",[t._v("响应头对象。别名是 response.header。")]),t._v(" "),s("h3",{attrs:{id:"response-socket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-socket"}},[t._v("#")]),t._v(" response.socket")]),t._v(" "),s("p",[t._v("响应套接字。 作为 request.socket 指向 net.Socket 实例。")]),t._v(" "),s("h3",{attrs:{id:"response-status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-status"}},[t._v("#")]),t._v(" response.status")]),t._v(" "),s("p",[t._v("获取响应状态。默认情况下，response.status 设置为 404 而不是像 node 的 res.statusCode 那样默认为 200。")]),t._v(" "),s("h3",{attrs:{id:"response-status-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-status-2"}},[t._v("#")]),t._v(" response.status=")]),t._v(" "),s("p",[t._v("通过数字代码设置响应状态：")]),t._v(" "),s("ul",[s("li",[t._v('100 "continue"')]),t._v(" "),s("li",[t._v('101 "switching protocols"')]),t._v(" "),s("li",[t._v('102 "processing"')]),t._v(" "),s("li",[t._v('200 "ok"')]),t._v(" "),s("li",[t._v('201 "created"')]),t._v(" "),s("li",[t._v('202 "accepted"')]),t._v(" "),s("li",[t._v('203 "non-authoritative information"')]),t._v(" "),s("li",[t._v('204 "no content"')]),t._v(" "),s("li",[t._v('205 "reset content"')]),t._v(" "),s("li",[t._v('206 "partial content"')]),t._v(" "),s("li",[t._v('207 "multi-status"')]),t._v(" "),s("li",[t._v('208 "already reported"')]),t._v(" "),s("li",[t._v('226 "im used"')]),t._v(" "),s("li",[t._v('300 "multiple choices"')]),t._v(" "),s("li",[t._v('301 "moved permanently"')]),t._v(" "),s("li",[t._v('302 "found"')]),t._v(" "),s("li",[t._v('303 "see other"')]),t._v(" "),s("li",[t._v('304 "not modified"')]),t._v(" "),s("li",[t._v('305 "use proxy"')]),t._v(" "),s("li",[t._v('307 "temporary redirect"')]),t._v(" "),s("li",[t._v('308 "permanent redirect"')]),t._v(" "),s("li",[t._v('400 "bad request"')]),t._v(" "),s("li",[t._v('401 "unauthorized"')]),t._v(" "),s("li",[t._v('402 "payment required"')]),t._v(" "),s("li",[t._v('403 "forbidden"')]),t._v(" "),s("li",[t._v('404 "not found"')]),t._v(" "),s("li",[t._v('405 "method not allowed"')]),t._v(" "),s("li",[t._v('406 "not acceptable"')]),t._v(" "),s("li",[t._v('407 "proxy authentication required"')]),t._v(" "),s("li",[t._v('408 "request timeout"')]),t._v(" "),s("li",[t._v('409 "conflict"')]),t._v(" "),s("li",[t._v('410 "gone"')]),t._v(" "),s("li",[t._v('411 "length required"')]),t._v(" "),s("li",[t._v('412 "precondition failed"')]),t._v(" "),s("li",[t._v('413 "payload too large"')]),t._v(" "),s("li",[t._v('414 "uri too long"')]),t._v(" "),s("li",[t._v('415 "unsupported media type"')]),t._v(" "),s("li",[t._v('416 "range not satisfiable"')]),t._v(" "),s("li",[t._v('417 "expectation failed"')]),t._v(" "),s("li",[t._v('418 "I\'m a teapot"')]),t._v(" "),s("li",[t._v('422 "unprocessable entity"')]),t._v(" "),s("li",[t._v('423 "locked"')]),t._v(" "),s("li",[t._v('424 "failed dependency"')]),t._v(" "),s("li",[t._v('426 "upgrade required"')]),t._v(" "),s("li",[t._v('428 "precondition required"')]),t._v(" "),s("li",[t._v('429 "too many requests"')]),t._v(" "),s("li",[t._v('431 "request header fields too large"')]),t._v(" "),s("li",[t._v('500 "internal server error"')]),t._v(" "),s("li",[t._v('501 "not implemented"')]),t._v(" "),s("li",[t._v('502 "bad gateway"')]),t._v(" "),s("li",[t._v('503 "service unavailable"')]),t._v(" "),s("li",[t._v('504 "gateway timeout"')]),t._v(" "),s("li",[t._v('505 "http version not supported"')]),t._v(" "),s("li",[t._v('506 "variant also negotiates"')]),t._v(" "),s("li",[t._v('507 "insufficient storage"')]),t._v(" "),s("li",[t._v('508 "loop detected"')]),t._v(" "),s("li",[t._v('510 "not extended"')]),t._v(" "),s("li",[t._v('511 "network authentication required"')])]),t._v(" "),s("p",[s("strong",[t._v("注意")]),t._v(": 不用太在意记住这些字符串, 如果你写错了,可以查阅这个列表随时更正.\n由于 response.status 默认设置为 404，因此发送没有 body 且状态不同的响应的操作如下：\nctx.response.status = 200; // 或其他任何状态 ctx.response.status = 204;")]),t._v(" "),s("h3",{attrs:{id:"response-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-message"}},[t._v("#")]),t._v(" response.message")]),t._v(" "),s("p",[t._v("获取响应的状态消息. 默认情况下, response.message 与 response.status 关联.")]),t._v(" "),s("h3",{attrs:{id:"response-message-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-message-2"}},[t._v("#")]),t._v(" response.message=")]),t._v(" "),s("p",[t._v("将响应的状态消息设置为给定值。")]),t._v(" "),s("h3",{attrs:{id:"response-length"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-length"}},[t._v("#")]),t._v(" response.length=")]),t._v(" "),s("p",[t._v("将响应的 Content-Length 设置为给定值。")]),t._v(" "),s("h3",{attrs:{id:"response-length-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-length-2"}},[t._v("#")]),t._v(" response.length")]),t._v(" "),s("p",[t._v("以数字返回响应的 Content-Length，或者从ctx.body推导出来，或者undefined。")]),t._v(" "),s("h3",{attrs:{id:"response-body"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-body"}},[t._v("#")]),t._v(" response.body")]),t._v(" "),s("p",[t._v("获取响应主体。")]),t._v(" "),s("h3",{attrs:{id:"response-body-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-body-2"}},[t._v("#")]),t._v(" response.body=")]),t._v(" "),s("p",[t._v("默认或将控制器return的值，赋值给该属性。\n将响应体设置为以下之一：")]),t._v(" "),s("ul",[s("li",[t._v("string 写入")]),t._v(" "),s("li",[t._v("Buffer 写入")]),t._v(" "),s("li",[t._v("Stream 管道")]),t._v(" "),s("li",[t._v("Object || Array JSON-字符串化")]),t._v(" "),s("li",[t._v("null 无内容响应")])]),t._v(" "),s("p",[t._v("如果 response.status 未被设置, Koa 将会自动设置状态为 200 或 204。\nKoa 没有防范作为响应体的所有内容 - 函数没有有意义地序列化，返回布尔值可能会根据您的应用程序而有意义。并且当错误生效时，它可能无法正常工作 错误的属性无法枚举。 我们建议在您的应用中添加中间件，以确定每个应用的正文类型。 示例中间件可能是：\napp.use(async (ctx, next) => {   await next()   ctx.assert.equal('object', typeof ctx, 500, '某些开发错误') })")]),t._v(" "),s("h4",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("p",[t._v("Content-Type 默认为 text/html 或 text/plain, 同时默认字符集是 utf-8。Content-Length 字段也是如此。")]),t._v(" "),s("h4",{attrs:{id:"buffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#buffer"}},[t._v("#")]),t._v(" Buffer")]),t._v(" "),s("p",[t._v("Content-Type 默认为 application/octet-stream, 并且 Content-Length 字段也是如此。")]),t._v(" "),s("h4",{attrs:{id:"stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream"}},[t._v("#")]),t._v(" Stream")]),t._v(" "),s("p",[t._v("Content-Type 默认为 application/octet-stream。\n每当流被设置为响应主体时，.onerror 作为侦听器自动添加到 error 事件中以捕获任何错误。此外，每当请求关闭（甚至过早）时，流都将被销毁。如果你不想要这两个功能，请勿直接将流设为主体。例如，当将主体设置为代理中的 HTTP 流时，你可能不想要这样做，因为它会破坏底层连接。\n以下是流错误处理的示例，而不会自动破坏流：\nconst PassThrough = require('stream').PassThrough; app.use(async ctx => {   ctx.body = someHTTPStream.on('error', (err) => ctx.onerror(err)).pipe(PassThrough()); });")]),t._v(" "),s("h4",{attrs:{id:"object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[t._v("#")]),t._v(" Object")]),t._v(" "),s("p",[t._v("Content-Type 默认为 application/json. 这包括普通的对象 { foo: 'bar' } 和数组 ['foo', 'bar']。")]),t._v(" "),s("h3",{attrs:{id:"response-get-field"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-get-field"}},[t._v("#")]),t._v(" response.get(field)")]),t._v(" "),s("p",[t._v("不区分大小写获取响应头字段值 field。\nconst etag = ctx.response.get('ETag');")]),t._v(" "),s("h3",{attrs:{id:"response-has-field"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-has-field"}},[t._v("#")]),t._v(" response.has(field)")]),t._v(" "),s("p",[t._v("如果当前在响应头中设置了由名称标识的消息头，则返回 true. 消息头名称匹配不区分大小写.\nconst rateLimited = ctx.response.has('X-RateLimit-Limit');")]),t._v(" "),s("h3",{attrs:{id:"response-set-field-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-set-field-value"}},[t._v("#")]),t._v(" response.set(field, value)")]),t._v(" "),s("p",[t._v("设置响应头 field 到 value:\nctx.set('Cache-Control', 'no-cache');")]),t._v(" "),s("h3",{attrs:{id:"response-append-field-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-append-field-value"}},[t._v("#")]),t._v(" response.append(field, value)")]),t._v(" "),s("p",[t._v("用值 val 附加额外的消息头 field。\nctx.append('Link', '"),s("a",{attrs:{href:"http://127.0.0.1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://127.0.0.1/"),s("OutboundLink")],1),t._v("');")]),t._v(" "),s("h3",{attrs:{id:"response-set-fields"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-set-fields"}},[t._v("#")]),t._v(" response.set(fields)")]),t._v(" "),s("p",[t._v("用一个对象设置多个响应头fields:\nctx.set({   'Etag': '1234',   'Last-Modified': date });\n这将委托给 "),s("a",{attrs:{href:"https://nodejs.org/dist/latest/docs/api/http.html#http_request_setheader_name_value",target:"_blank",rel:"noopener noreferrer"}},[t._v("setHeader"),s("OutboundLink")],1),t._v(" ，它通过指定的键设置或更新消息头，并且不重置整个消息头。")]),t._v(" "),s("h3",{attrs:{id:"response-remove-field"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-remove-field"}},[t._v("#")]),t._v(" response.remove(field)")]),t._v(" "),s("p",[t._v("删除消息头 field。")]),t._v(" "),s("h3",{attrs:{id:"response-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-type"}},[t._v("#")]),t._v(" response.type")]),t._v(" "),s("p",[t._v('获取响应 Content-Type, 不含 "charset" 等参数。\n译者注: 这里其实是只获取 '),s("em",[t._v("mime-type")]),t._v(", 详见"),s("a",{attrs:{href:"https://github.com/koajs/koa/blob/eda27608f7d39ede86d7b402aae64b1867ce31c6/lib/response.js#L371",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码及其注释"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ct "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "image/png"')]),t._v("\n")])])]),s("h3",{attrs:{id:"response-type-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-type-2"}},[t._v("#")]),t._v(" response.type=")]),t._v(" "),s("p",[t._v("设置响应 Content-Type 通过 mime 字符串或文件扩展名。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/plain; charset=utf-8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'image/png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("注意: 在适当的情况下为你选择 charset, 比如 response.type = 'html' 将默认是 \"utf-8\". 如果你想覆盖 charset, 使用 ctx.set('Content-Type', 'text/html') 将响应头字段设置为直接值。")]),t._v(" "),s("h3",{attrs:{id:"response-is-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-is-types"}},[t._v("#")]),t._v(" response.is(types...)")]),t._v(" "),s("p",[t._v("非常类似 ctx.request.is(). 检查响应类型是否是所提供的类型之一。这对于创建操纵响应的中间件特别有用。\n例如, 这是一个中间件，可以削减除流之外的所有HTML响应。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" minify "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'html-minifier'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pipe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"response-redirect-url-alt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-redirect-url-alt"}},[t._v("#")]),t._v(" response.redirect(url, [alt])")]),t._v(" "),s("p",[t._v("执行 [302] 重定向到 url.\n字符串 “back” 是特别提供 Referrer 支持的，当 Referrer 不存在时，使用 alt 或 “/”。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redirect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'back'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redirect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'back'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/index.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redirect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redirect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://google.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("要更改 “302” 的默认状态，只需在该调用之前或之后给 status 赋值。要变更主体请在此调用之后:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redirect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/cart'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Redirecting to shopping cart'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"response-attachment-filename-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-attachment-filename-options"}},[t._v("#")]),t._v(" response.attachment([filename], [options])")]),t._v(" "),s("p",[t._v("将 Content-Disposition 设置为 “附件” 以指示客户端提示下载。(可选)指定下载的 filename 和部分 "),s("a",{attrs:{href:"https://github.com/jshttp/content-disposition#options",target:"_blank",rel:"noopener noreferrer"}},[t._v("参数"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"response-headersent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-headersent"}},[t._v("#")]),t._v(" response.headerSent")]),t._v(" "),s("p",[t._v("检查是否已经发送了一个响应头。 用于查看客户端是否可能会收到错误通知。")]),t._v(" "),s("h3",{attrs:{id:"response-lastmodified"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-lastmodified"}},[t._v("#")]),t._v(" response.lastModified")]),t._v(" "),s("p",[t._v("将 Last-Modified 消息头返回为 Date, 如果存在。")]),t._v(" "),s("h3",{attrs:{id:"response-lastmodified-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-lastmodified-2"}},[t._v("#")]),t._v(" response.lastModified=")]),t._v(" "),s("p",[t._v("将 Last-Modified 消息头设置为适当的 UTC 字符串。您可以将其设置为 Date 或日期字符串。\nctx.response.lastModified = new Date();")]),t._v(" "),s("h3",{attrs:{id:"response-etag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-etag"}},[t._v("#")]),t._v(" response.etag=")]),t._v(" "),s("p",[t._v("设置包含 \" 包裹的 ETag 响应， 请注意，没有相应的 response.etag getter。\nctx.response.etag = crypto.createHash('md5').update(ctx.body).digest('hex');")]),t._v(" "),s("h3",{attrs:{id:"response-vary-field"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-vary-field"}},[t._v("#")]),t._v(" response.vary(field)")]),t._v(" "),s("p",[t._v("设置 field 的 vary。")]),t._v(" "),s("h3",{attrs:{id:"response-flushheaders"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-flushheaders"}},[t._v("#")]),t._v(" response.flushHeaders()")]),t._v(" "),s("p",[t._v("刷新任何设置的消息头，然后是主体(body)。")])])}),[],!1,null,null,null);s.default=n.exports}}]);