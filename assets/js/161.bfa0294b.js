(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{524:function(t,a,s){"use strict";s.r(a);var r=s(14),n=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("ee-go：v1.1.0")])]),t._v(" "),a("h3",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("util模块")]),t._v(" "),a("h3",{attrs:{id:"使用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[t._v("#")]),t._v(" 使用方法")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/wallace5303/ee-go/eutil"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"api列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api列表"}},[t._v("#")]),t._v(" API列表")]),t._v(" "),a("p",[t._v("仅做简单介绍。按照go标准，常量/函数/方法等说明信息，都在源码中。")]),t._v(" "),a("h3",{attrs:{id:"func-getenvs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#func-getenvs"}},[t._v("#")]),t._v(" func GetEnvs()")]),t._v(" "),a("p",[t._v("打印全部环境变量")]),t._v(" "),a("h3",{attrs:{id:"func-readjsonstrict-f-string-map-string-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#func-readjsonstrict-f-string-map-string-any"}},[t._v("#")]),t._v(" func ReadJsonStrict(f string) map[string]any")]),t._v(" "),a("p",[t._v("读取json文件，如果报错直接退出")]),t._v(" "),a("h3",{attrs:{id:"func-readjson-f-string-map-string-any-error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#func-readjson-f-string-map-string-any-error"}},[t._v("#")]),t._v(" func ReadJson(f string) (map[string]any, error)")]),t._v(" "),a("p",[t._v("读取json文件，返回错误")]),t._v(" "),a("h3",{attrs:{id:"func-recover"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#func-recover"}},[t._v("#")]),t._v(" func Recover()")]),t._v(" "),a("p",[t._v("捕获panic，返回错误，并追踪堆栈信息")])])}),[],!1,null,null,null);a.default=n.exports}}]);